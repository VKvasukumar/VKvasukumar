import java.util.ArrayList;
import java.util.List;

public class TextJustification {
    public List<String> fullJustify(String[] words, int maxWidth) {
        List<String> result = new ArrayList<>();
        List<String> currentLine = new ArrayList<>();
        int currentLength = 0;
        
        for (String word : words) {
            if (currentLength + word.length() + currentLine.size() > maxWidth) {
                if (currentLine.size() == 1) {
                    StringBuilder sb = new StringBuilder(currentLine.get(0));
                    while (sb.length() < maxWidth) {
                        sb.append(' ');
                    }
                    result.add(sb.toString());
                } else {
                    int totalSpaces = maxWidth - currentLength;
                    int spacesBetweenWords = totalSpaces / (currentLine.size() - 1);
                    int extraSpaces = totalSpaces % (currentLine.size() - 1);
                    
                    StringBuilder sb = new StringBuilder();
                    for (int i = 0; i < currentLine.size(); i++) {
                        sb.append(currentLine.get(i));
                        if (i < currentLine.size() - 1) {
                            int spaces = spacesBetweenWords;
                            if (extraSpaces > 0) {
                                spaces++;
                                extraSpaces--;
                            }
                            for (int j = 0; j < spaces; j++) {
                                sb.append(' ');
                            }
                        }
                    }
                    result.add(sb.toString());
                }
                currentLine.clear();
                currentLength = 0;
            }
            currentLine.add(word);
            currentLength += word.length();
        }
        
        StringBuilder lastLine = new StringBuilder();
        for (String word : currentLine) {
            if (lastLine.length() > 0) {
                lastLine.append(' ');
            }
            lastLine.append(word);
        }
        while (lastLine.length() < maxWidth) {
            lastLine.append(' ');
        }
        result.add(lastLine.toString());
        
        return result;
    }

    public static void main(String[] args) {
        TextJustification tj = new TextJustification();
        String[] words = {"This", "is", "an", "example", "of", "text", "justification."};
        int maxWidth = 16;
        List<String> justifiedText = tj.fullJustify(words, maxWidth);
        for (String line : justifiedText) {
            System.out.println('"' + line + '"');
        }
    }
}
